@*
// FindAllReferences

@using Walk.Common.RazorLib.TreeViews.Displays
@using Walk.Ide.RazorLib.FindAllReferences.Models

@{
	var findAllReferencesState = FindAllReferencesService.GetFindAllReferencesState();
	var appOptionsState = AppOptionsService.GetAppOptionsState();
}

<div class="di_find-all-references" style="height: 100%;">
	<div class="di_find-all-references-top-row" style="height: 1.8em;">
		<span class="di_te_type"
		      title="type">
			@if (string.IsNullOrWhiteSpace(findAllReferencesState.SyntaxName))
			{
				<text>string.IsNullOrWhiteSpace(findAllReferencesState.SyntaxName)</text>
			}
			else
			{
				<text>@findAllReferencesState.SyntaxName</text>
			}
		</span>
		
		<span class="di_te_namespace"
		      title="namespace">
			(<!--
			-->@if (string.IsNullOrWhiteSpace(findAllReferencesState.NamespaceName))
			{
				<text>string.IsNullOrWhiteSpace(findAllReferencesState.NamespaceName)</text>
			}
			else
			{
				<text>@findAllReferencesState.NamespaceName</text>
			}<!--
			-->)
		</span>
	</div>
	
	<div class="di_find-all-references-body" style="height: calc(100% - 1.8em);">
        <TreeViewContainerDisplay TreeViewContainerKey="FindAllReferencesState.TreeViewContainerKey"
                                  OnContextMenuFunc="OnTreeViewContextMenuFunc"
                                  TreeViewKeyboardEventHandler="_treeViewKeyboardEventHandler"
                                  TreeViewMouseEventHandler="_treeViewMouseEventHandler"/>
	</div>
	
	<div>
		@{ var referenceList = findAllReferencesState.TypeDefinitionNode.ReferenceHashSet.ToList(); }
		
		<ul>
			@foreach (var resourceUri in referenceList)
			{
				<li>@resourceUri.Value</li>
			}
		</ul>
	</div>
</div>
*@