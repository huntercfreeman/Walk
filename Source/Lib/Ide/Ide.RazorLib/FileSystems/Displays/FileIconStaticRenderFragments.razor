@using Walk.Common.RazorLib
@using Walk.Common.RazorLib.FileSystems.Models
@using Walk.TextEditor.RazorLib.TextEditors.Models
@using Walk.Ide.RazorLib.FileSystems.Models

@code {
	public static RenderFragment<(IconDriver IconDriver, AbsolutePath AbsolutePath)> GetRenderFragment = tuple => 
	@<span class="di_ide_solution-explorer-icon-display">
    @if (tuple.AbsolutePath.IsDirectory)
    {
        if (tuple.AbsolutePath.NameNoExtension == IdeFacts.Properties)
        {
            @IconPropertiesFragment.Render(tuple.IconDriver)
        }
        else if (tuple.AbsolutePath.NameNoExtension == IdeFacts.WwwRoot)
        {
            @IconWwwRootFragment.Render(tuple.IconDriver)
        }
        else
        {
        	@IconFolderFragment.Render(tuple.IconDriver)
        }
    }
    else
    {
        switch (tuple.AbsolutePath.ExtensionNoPeriod)
        {
            case ExtensionNoPeriodFacts.DOT_NET_SOLUTION:
                @IconDotNetSolutionFragment.Render(tuple.IconDriver)
                break;
			case ExtensionNoPeriodFacts.DOT_NET_SOLUTION_X:
                @IconDotNetSolutionFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.C_SHARP_PROJECT:
                @IconCSharpProjectFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.C_SHARP_CLASS:
            case ExtensionNoPeriodFacts.RAZOR_CODEBEHIND:
                @IconCSharpClassFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.CSHTML_CLASS:
                @IconCshtmlFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.RAZOR_MARKUP:
                @IconRazorFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.JSON:
                @IconJsonFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.CSS:
                @IconCssFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.JAVA_SCRIPT:
                @IconJsFragment.Render(tuple.IconDriver)
                break;
            case ExtensionNoPeriodFacts.TYPE_SCRIPT:
                @IconTsFragment.Render(tuple.IconDriver)
                break;
            default:
                @IconFileFragment.Render(tuple.IconDriver)
                break;
        }
    }
</span>;
}