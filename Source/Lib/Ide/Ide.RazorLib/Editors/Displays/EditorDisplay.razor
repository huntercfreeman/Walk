@using Walk.Common.RazorLib.Tabs.Displays
@using Walk.TextEditor.RazorLib.TextEditors.Displays
@using Walk.TextEditor.RazorLib.TextEditors.Displays.Internals
@using Walk.Ide.RazorLib.BackgroundTasks.Models

@* ContextRecord="_viewModelDisplayOptions.ContextRecord" *@


    <div class="di_ide_section-body di_te_text-editor-group di_ide_section-no-title"
         id="@HtmlId">
    
    	@{
	        var textEditorGroup = IdeService.TextEditorService.Group_GetTextEditorGroupState().GroupList.FirstOrDefault(
	            x => x.GroupKey == IdeService.EditorTextEditorGroupKey);
	    }
    
    	@if (textEditorGroup is not null)
    	{
    		<div class="di_te_text-editor-group-tabs-list">
				<TabListDisplay @ref="_tabListDisplay"
								TabList="@GetTabList(textEditorGroup)"/>
			</div>
	
			<div class="di_te_text-editor-group-active-view-model">
			
				@{
		            var textEditorModel = IdeService.TextEditorService.ViewModel_GetModelOrDefault(
		                textEditorGroup.ActiveViewModelKey);
		    
		            if (textEditorModel is null)
		            {
		                <text>No editors are open currently</text>
		            }
		            else
		            {
		            	<FindOverlayDisplay ComponentDataKey="_componentDataKey"/>
		            
						<TextEditorFileExtensionHeaderDisplay ComponentDataKey="_componentDataKey"
						                                      TextEditorViewModelKey="textEditorGroup.ActiveViewModelKey"/>
		            	
		                <TextEditorViewModelSlimDisplay TextEditorViewModelKey="textEditorGroup.ActiveViewModelKey"
		                                                ViewModelDisplayOptions="_viewModelDisplayOptions"/>
		                           
						<TextEditorDefaultFooterDisplay ComponentDataKey="_componentDataKey"/>
		            }
	            }
            </div>
	    }
	    else
	    {
	        <div>
	            Group not found
	        </div>
	    }
    </div>

