<div class="di_menu-display"
     tabindex="-1"
     @ref="_menuDisplayElementReference"
     @onclick:stopPropagation="true"
     @ondblclick:stopPropagation="true"
     @onkeydownwithpreventscroll:stopPropagation="true"
     @onkeydown:stopPropagation="true"
     @onkeydown:preventDefault="true"
     @onkeydown="HandleOnKeyDownAsync"
     @oncontextmenu:preventDefault="true"
     @oncontextmenu:stopPropagation="true">
     
    <CascadingValue Value="RestoreFocusToThisMenuAsync" Name="ReturnFocusToParentFuncAsync">
        @{
            var menuOptionsGroupedByKindList = MenuRecord.MenuOptionList
                .GroupBy(x => x.MenuOptionKind)
                .SelectMany(x => x);
        
            var previousKind = menuOptionsGroupedByKindList.FirstOrDefault()?.MenuOptionKind ?? Walk.Common.RazorLib.Menus.Models.MenuOptionKind.Create;
        }
        
        @for (var i = 0; i < MenuRecord.MenuOptionList.Count; i++)
        {
            var menuOption = MenuRecord.MenuOptionList[i];

            if (previousKind != menuOption.MenuOptionKind)
            {
                previousKind = menuOption.MenuOptionKind;
                <hr class="di_hr"/>
            }
            
            <MenuOptionDisplay MenuOptionRecord="@menuOption"
                               ActiveMenuOptionRecordIndex="@_activeMenuOptionRecordIndex"
                               Index="i"
                               IconRenderFragment="IconRenderFragment"/>
        }
    </CascadingValue>
</div>