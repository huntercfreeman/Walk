<div id="@_htmlId" class="di_menu-display" tabindex="0">
    @{
        _horizontalRuleElementIndexHashSet.Clear();
    
        var menuOptionsGroupedByKindList = Menu.MenuOptionList
            .GroupBy(x => x.MenuOptionKind)
            .SelectMany(x => x);
    
        var previousKind = menuOptionsGroupedByKindList.FirstOrDefault()?.MenuOptionKind ?? Walk.Common.RazorLib.Menus.Models.MenuOptionKind.Create;
        
        var appOptionsState = CommonService.GetAppOptionsState();
    
    	var iconDriver = new IconDriver(
			appOptionsState.Options.IconSizeInPixels,
			appOptionsState.Options.IconSizeInPixels);
    }
    
    @for (var i = 0; i < Menu.MenuOptionList.Count; i++)
    {
        var menuOption = Menu.MenuOptionList[i];
        
        var cssClass = _activeIndex == i
            ? "di_menu-option-display di_unselectable di_active"
            : "di_menu-option-display di_unselectable";

        if (previousKind != menuOption.MenuOptionKind)
        {
            previousKind = menuOption.MenuOptionKind;
            <hr class="di_hr"/>
            _horizontalRuleElementIndexHashSet.Add(i);
        }
        
        <div class="@cssClass" style="height: @(_lineHeight)px;">
            
            @*@if (IconRenderFragment is not null)
            {
                <div class="di_menu-option-icon">
                    @IconRenderFragment(menuOption)
                </div>
            }*@
            
            @menuOption.DisplayName
            
            @if (menuOption.SubMenu is not null)
            {
                @IconChevronRightFragment.Render(iconDriver)
            }
        </div>
        
        /*@if (i == IndexMenuOptionShouldDisplayWidget)
        {
        @*
            <div class="di_menu-option-widget"
                 @onclick:stopPropagation="true"
                 @ondblclick:stopPropagation="true"
                 @onkeydown:stopPropagation="true"
                 @onkeydownwithpreventscroll:stopPropagation="true"
                 @oncontextmenu:stopPropagation="true">
    
                <CascadingValue Value="MenuOptionCallbacks">
                    <DynamicComponent Type="MenuOptionRecord.WidgetRendererType"
                                      Parameters="MenuOptionRecord.WidgetParameterMap"/>
                </CascadingValue>
            </div>
        *@
        }*/
    }
</div>