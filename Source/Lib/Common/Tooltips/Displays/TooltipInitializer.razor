<div class="di_tooltip-initializer"></div>

@{
    var tooltipModel = TooltipService.GetTooltipState().TooltipModel;
    
    if (tooltipModel is not null)
	{
		var x = tooltipModel.RelativeCoordinates.RelativeX +
				tooltipModel.RelativeCoordinates.RelativeScrollLeft;
				
		var y = tooltipModel.RelativeCoordinates.RelativeY +
				tooltipModel.RelativeCoordinates.RelativeScrollTop;
	
		if (Math.Abs(ValueTooltipRelativeX - x) >= 0.1)
		{
			ValueTooltipRelativeX = x;
			TooltipRelativeX = x.ToString(System.Globalization.CultureInfo.InvariantCulture);
		}
	
		if (Math.Abs(ValueTooltipRelativeY - y) >= 0.1)
		{
			ValueTooltipRelativeY = y;
			TooltipRelativeY = y.ToString(System.Globalization.CultureInfo.InvariantCulture);
		}
	}
}
	    
@if (tooltipModel is not null)
{
    <div class="di_te_tooltip di_set-selectable @(tooltipModel.CssClassString ?? string.Empty)"
         style="left: @(TooltipRelativeX)px; top: @(TooltipRelativeY)px;"
         @onmouseover="tooltipModel.OnMouseOver"
         @onmousedown:stopPropagation="true"
         @onmousemove:stopPropagation="true"
         @ondblclick:stopPropagation="true"
         @onclick:stopPropagation="true"
         @oncontextmenu:stopPropagation="true">

        <DynamicComponent Type="tooltipModel.RendererType"
                          Parameters="tooltipModel.ParameterMap" />
    </div>
}
