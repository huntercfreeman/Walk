<div style="display: flex;"
     title="@TreeViewReflection.Key.Guid">
    
     @{ var textEditorDebugObjectWrap = TreeViewReflection.Item; }
    
    <div class="di_te_keyword">
        @(textEditorDebugObjectWrap.IsPubliclyReadable ? "public" : "private")
        &nbsp;
    </div>
    
    <div class="di_te_type">
        @(textEditorDebugObjectWrap.ItemType.Name)
        &nbsp;
    </div>
    
    <div>
        @(textEditorDebugObjectWrap.DisplayName)
        &nbsp;
    </div>

    @if (textEditorDebugObjectWrap.Item is null)
    {
        <div class="di_te_keyword">
            (null)
        </div>
    }
    else
    {
        var toStringResult = textEditorDebugObjectWrap.Item.ToString();
    
        <div class="@GetCssStylingForValue(textEditorDebugObjectWrap.ItemType)"
              style="width: 200px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; display: inline-block;"
              title="@toStringResult">
            @toStringResult
        </div>
    }
</div>