@using Walk.Common.RazorLib.Keys.Models;
@using Walk.Common.RazorLib.TreeViews.Models;

@{
    var treeViewContainer = TreeViewService.GetTreeViewContainer(TreeViewContainerKey);
    
    _treeViewCascadingValueBatch.TreeViewContainer = treeViewContainer;
    _treeViewCascadingValueBatch.HandleTreeViewOnContextMenu = HandleTreeViewOnContextMenu;
    _treeViewCascadingValueBatch.TreeViewMouseEventHandler = TreeViewMouseEventHandler;
    _treeViewCascadingValueBatch.TreeViewKeyboardEventHandler = TreeViewKeyboardEventHandler;
    _treeViewCascadingValueBatch.TreeViewService = TreeViewService;
    _treeViewCascadingValueBatch.CommonBackgroundTaskApi = CommonBackgroundTaskApi;
    _treeViewCascadingValueBatch.AppOptionsService = AppOptionsService;
    _treeViewCascadingValueBatch.OffsetPerDepthInPixels = OffsetPerDepthInPixels;
    _treeViewCascadingValueBatch.WalkTreeViewIconWidth = WalkTreeViewIconWidth;

    <div class="di_tree-view-state di_unselectable @GetHasActiveNodeCssClass(treeViewContainer) @CssClassString"
         style="@CssStyleString"
         tabindex="0"
         @ref="_treeViewStateDisplayElementReference"
         @onkeydownwithpreventscroll="(e) => HandleTreeViewOnKeyDownWithPreventScroll(e, treeViewContainer)"
         @oncontextmenu:preventDefault="true"
         @oncontextmenu:stopPropagation="true"
         @oncontextmenu="(e) => HandleTreeViewOnContextMenu(e, treeViewContainer?.Key ?? Key<TreeViewContainer>.Empty, null)">

        @if (treeViewContainer is null)
        {
            <div>@nameof(treeViewContainer) was null</div>
        }
        else
        {
            <CascadingValue Value="_treeViewCascadingValueBatch"
                            IsFixed="true">
                <TreeViewNodeDisplay TreeViewNoType="treeViewContainer.RootNode"
                                     Depth="GetRootDepth(treeViewContainer.RootNode)"/>
            </CascadingValue>
        }
    </div>
}

@if (OnContextMenuRenderFragment is not null &&
     _treeViewContextMenuCommandArgs.TreeViewService is not null)
{
    <div class="di_context-menu di_set-selectable"
         style="@GetContextMenuCssStyleString()"
         @oncontextmenu:stopPropagation="true"
         @onmousedown:stopPropagation="true"
         @onclick:stopPropagation="true"
         @ondblclick:stopPropagation="true"
         @onkeydown:stopPropagation="true"
         @onkeydownwithpreventscroll:stopPropagation="true">

        @OnContextMenuRenderFragment(_treeViewContextMenuCommandArgs)
    </div>
}