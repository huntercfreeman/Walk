@using Walk.Common.RazorLib
@using Walk.Common.RazorLib.Contexts.Displays
@using Walk.Common.RazorLib.Contexts.Models;
@using Walk.Common.RazorLib.Dropdowns.Displays
@using Walk.Common.RazorLib.Dropdowns.Models;
@using Walk.Common.RazorLib.TreeViews.Displays
@using Walk.Common.RazorLib.TreeViews.Models;
@using Walk.Extensions.DotNet.DotNetSolutions.Displays.Internals;
@using Walk.Extensions.DotNet.DotNetSolutions.Models;

@* ContextRecord="ContextFacts.SolutionExplorerContext" *@

<div class="di_ide_solution-explorer-display" style="height: 100%">
    @{
    	var dotNetSolutionState = DotNetService.GetDotNetSolutionState();
    	var appOptionsState = DotNetService.IdeService.TextEditorService.CommonService.GetAppOptionsState();
    }

	@if (appOptionsState.Options.ShowPanelTitles)
	{
	    <div class="di_ide_section-title">
	        Solution Explorer
	
	        @if (dotNetSolutionState.IsExecutingAsyncTaskLinks > 0)
	        {
	        	var iconDriver = new IconDriver(
					appOptionsState.Options.IconSizeInPixels,
					appOptionsState.Options.IconSizeInPixels);
	            @IconLoadingFragment.Render(iconDriver)
	        }
	    </div>
    }

    <div class="di_ide_section-body @DotNetService.IdeService.TextEditorService.CommonService.Options_ShowPanelTitlesCssClass">
        @if (dotNetSolutionState.DotNetSolutionModel is null)
        {
            <button class="di_button"
                    style="display: inline; margin-right: 12px; margin-bottom: 12px;"
                    @onclick="() => DotNetSolutionState.ShowInputFile(DotNetService.IdeService, DotNetService)">
                Open Solution
            </button>

            <button class="di_button"
                    style="display: inline;"
            @onclick="OpenNewDotNetSolutionDialog">
                New Solution
            </button>
        }
        else
        {
            <TreeViewContainerDisplay TreeViewContainerKey="DotNetSolutionState.TreeViewSolutionExplorerStateKey"
                                      CssStyleString="height: 100%;"
                                      OnContextMenuFunc="OnTreeViewContextMenuFunc"
                                      TreeViewKeyboardEventHandler="_solutionExplorerTreeViewKeymap"
                                      TreeViewMouseEventHandler="_solutionExplorerTreeViewMouseEventHandler"
                                      WalkTreeViewIconWidth="appOptionsState.Options.IconSizeInPixels"
                                      OffsetPerDepthInPixels="OffsetPerDepthInPixels"/>
        }
    </div>
</div>