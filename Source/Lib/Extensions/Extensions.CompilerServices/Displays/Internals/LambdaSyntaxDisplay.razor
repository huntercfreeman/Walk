@using Walk.TextEditor.RazorLib.TextEditors.Models.Internals
@using Walk.Extensions.CompilerServices.Syntax
@using Walk.Extensions.CompilerServices.Syntax.Nodes
@using Walk.Extensions.CompilerServices.Syntax.Nodes.Enums

@{
	var syntaxViewModelLocal = SyntaxViewModel;
	
	string? prefixText;
	string? text;
	VariableDeclarationNode? variableDeclarationNode;
	
	if (syntaxViewModelLocal.DefinitionNode is null && syntaxViewModelLocal.TargetNode is null && syntaxViewModelLocal.TargetSymbol is null)
	{
		prefixText = "(null)";
		text = null;
		variableDeclarationNode = null;
	}
	else if (syntaxViewModelLocal.DefinitionNode is not null && syntaxViewModelLocal.DefinitionNode.SyntaxKind == SyntaxKind.VariableDeclarationNode)
	{
		prefixText = "(definition)";
		text = syntaxViewModelLocal.GetIdentifierText(syntaxViewModelLocal.DefinitionNode);
		variableDeclarationNode = null;
	}
	else if (syntaxViewModelLocal.TargetNode is not null && syntaxViewModelLocal.TargetNode.SyntaxKind == SyntaxKind.VariableReferenceNode)
	{
		prefixText = "(reference)";
		text = syntaxViewModelLocal.GetIdentifierText(syntaxViewModelLocal.TargetNode);
		variableDeclarationNode = null;
	}
	else if (syntaxViewModelLocal.TargetSymbol is not null &&
			 (syntaxViewModelLocal.TargetSymbol.Value.SyntaxKind == SyntaxKind.VariableSymbol ||
			  	syntaxViewModelLocal.TargetSymbol.Value.SyntaxKind == SyntaxKind.FieldSymbol ||
			  	syntaxViewModelLocal.TargetSymbol.Value.SyntaxKind == SyntaxKind.PropertySymbol))
	{
		prefixText = "(symbol)";
		text = syntaxViewModelLocal.GetTextFromTextSpan(syntaxViewModelLocal.TargetSymbol.Value.TextSpan);
		variableDeclarationNode = null;
	}
	else
	{
		prefixText = "(unrecognizable-state)";
		text = null;
		variableDeclarationNode = null;
	}
}

<span>
	<span class="di_te_keyword">lambda</span>
</span>
